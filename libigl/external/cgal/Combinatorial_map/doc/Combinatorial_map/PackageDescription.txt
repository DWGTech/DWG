/// \defgroup PkgCombinatorialMaps Combinatorial Maps Reference

/// \defgroup PkgCombinatorialMapsConcepts Concepts
/// \ingroup PkgCombinatorialMaps

/// \defgroup PkgCombinatorialMapsClasses Classes
/// \ingroup PkgCombinatorialMaps

/*! Basic constructions.
  \code
  #include <CGAL/Combinatorial_map_constructors.h>
  \endcode
*/
/// \defgroup PkgCombinatorialMapsConstructions Constructions
/// \ingroup PkgCombinatorialMaps

/*! High-level operations.
  \code
  #include <CGAL/Combinatorial_map_operations.h>
  \endcode
*/
/// \defgroup PkgCombinatorialMapsOperations Operations
/// \ingroup PkgCombinatorialMaps


/*!
\addtogroup PkgCombinatorialMaps
\cgalPkgDescriptionBegin{Combinatorial Maps,PkgCombinatorialMapsSummary}
\cgalPkgPicture{cmap_logo.png}
\cgalPkgSummaryBegin
\cgalPkgAuthor{Guillaume Damiand}
\cgalPkgDesc{This package implements Combinatorial Maps in <I>d</I> dimensions. A combinatorial map is a data structure enabling to represent an orientable subdivided object by describing all the cells of the subdivision (for example in 3D vertices, edges, faces, volumes) and all the incidence and adjacency relationships between these cells. Information can be associated to cells thanks to attributes. In 2D, a combinatorial map is equivalent to a halfedge data structure. The package provides basic creation, modification operations, and several iterators enabling to run through some specific part of the object.}
\cgalPkgManuals{Chapter_Combinatorial_Maps,PkgCombinatorialMaps}
\cgalPkgSummaryEnd
\cgalPkgShortInfoBegin
\cgalPkgSince{3.9}
\cgalPkgBib{cgal:d-cm}
\cgalPkgLicense{\ref licensesLGPL "LGPL"}
\cgalPkgShortInfoEnd
\cgalPkgDescriptionEnd

\cgalClassifedRefPages

## Concepts ##
- `GenericMap`
- `GenericMapItems`
- `CellAttribute`
- `CombinatorialMap`

## Classes ##
- `CGAL::Combinatorial_map<d,Items,Alloc>`
- `CGAL::Cell_attribute<CMap,Info_,Tag,OnMerge,OnSplit>`
- `CGAL::Cell_attribute_with_id<CMap,Info_,Tag,OnMerge,OnSplit>`
- `CGAL::Generic_map_min_items`

## Global Functions ##
### Constructions for Combinatorial Maps ###
- `CGAL::make_edge<CMap>`
- `CGAL::make_combinatorial_polygon<CMap>`
- `CGAL::make_combinatorial_tetrahedron<CMap>`
- `CGAL::make_combinatorial_hexahedron<CMap>`

### Operations for Combinatorial Maps ###
- `CGAL::is_removable<CMap,i>`
- `CGAL::remove_cell<CMap,i>`
- `CGAL::is_insertable_cell_1_in_cell_2<CMap>`
- `CGAL::is_insertable_cell_2_in_cell_3<CMap,InputIterator>`
- `CGAL::insert_cell_0_in_cell_1<CMap>`
- `CGAL::insert_cell_0_in_cell_2<CMap>`
- `CGAL::insert_cell_1_in_cell_2<CMap>`
- `CGAL::insert_dangling_cell_1_in_cell_2<CMap>`
- `CGAL::insert_cell_2_in_cell_3<CMap,InputIterator>`

*/

