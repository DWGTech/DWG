/// \defgroup PkgNumberTypes Number Types Reference

/// \defgroup PkgNumberTypesConcepts Concepts
/// \ingroup PkgNumberTypes

/// \defgroup nt_builtin Built-in types
/// \ingroup PkgNumberTypes

/// \defgroup nt_core CORE
/// \ingroup PkgNumberTypes

/// \defgroup nt_leda LEDA
/// \ingroup PkgNumberTypes

/// \defgroup nt_gmp GMP
/// \ingroup PkgNumberTypes

/// \defgroup nt_cgal CGAL Number Types
/// \ingroup PkgNumberTypes

/// \defgroup nt_cgal CGAL Number Types
/// \ingroup PkgNumberTypes

/// \defgroup nt_rrational Relates Rational
/// \ingroup PkgNumberTypes

/// \defgroup nt_ralgebraic Relates Algebraic Extensions
/// \ingroup PkgNumberTypes

/// \defgroup nt_util Utilities
/// \ingroup PkgNumberTypes


/*!
\addtogroup PkgNumberTypes
\todo check generated documentation
\cgalPkgDescriptionBegin{Number Types,PkgNumberTypesSummary}
\cgalPkgPicture{illustration.png}
\cgalPkgSummaryBegin
\cgalPkgAuthors{Michael Hemmer, Susan Hert, Sylvain Pion, and Stefan Schirra}
\cgalPkgDesc{This package provides number type concepts as well as number type classes and wrapper classes for third party number type libraries. }
\cgalPkgManuals{Chapter_Number_Types,PkgNumberTypes}
\cgalPkgSummaryEnd
\cgalPkgShortInfoBegin
\cgalPkgSince{1.0}
\cgalPkgBib{cgal:hhkps-nt}
\cgalPkgLicense{\ref licensesLGPL "LGPL" }
\cgalPkgShortInfoEnd
\cgalPkgDescriptionEnd

\cgalClassifedRefPages

## Number Type Classes and Concepts ##

- \link int.h `int` \endlink
- \link int.h `short int` \endlink
- \link int.h `long  int` \endlink
- \link long_long.h `long  long int` \endlink
- \link float.h `float` \endlink
- \link double.h `double` \endlink
- \link long_double.h `long double` \endlink

### %CORE ###

- `CORE::BigInt`
- `CORE::BigRat`
- `CORE::BigFloat`
- `CORE::Expr`

### LEDA ###

- `leda_integer`
- `leda_rational`
- `leda_bigfloat`
- `leda_real`

### GMP ###

- `mpz_class`
- `mpq_class`
- `CGAL::Mpzf`
- `CGAL::Gmpz`
- `CGAL::Gmpq`
- `CGAL::Gmpzf`
- `CGAL::Gmpfr`
- `CGAL::Gmpfi`

### %CGAL ###

- `CGAL::MP_Float`
- `CGAL::Interval_nt<Protected>`
- `CGAL::Lazy_exact_nt<NT>`
- `CGAL::Quotient<NT>`
- `CGAL::Number_type_checker<NT1,NT2,Comparator>`
- `CGAL::Exact_integer`
- `CGAL::Exact_rational`

## Relates Rational ##

- `CGAL::Rational_traits<NT>`
- `CGAL::simplest_rational_in_interval()`
- `CGAL::to_rational()`

## Relates Algebraic Extensions ##

- `RootOf_2`
- `CGAL::Root_of_traits<RT>`
- `CGAL::make_root_of_2<RT>`
- `CGAL::make_sqrt<RT>`
- `CGAL::compute_roots_of_2<RT,OutputIterator>`
- `CGAL::Sqrt_extension<NT,ROOT>`

## Utilities ##

- `CGAL::Min<T,Less>`
- `CGAL::Max<T,Less>`
- `CGAL::Is_valid<T>`
- `CGAL::min()`
- `CGAL::max()`
- `CGAL::is_valid()`
- `CGAL::Set_ieee_double_precision`
- `CGAL::Protect_FPU_rounding<Protected>`


\todo Document `CGAL_FE_TONEAREST` etc
*/

